










16
Traducción dejuegosRen’Py: una guía, by moskysDiscord: moskys#0576v1.0 –dic202016Y si ahora generásemos los scripts de traducción, dentro del bloque destinado a las traducciones directas ya nos encontraríamos con esto:La  traducción  es  mía,  claro.  Pero  lo  importante  es  eso:  si  no  hubiéramos  editado  el  script  original  para cambiar “Your thoughts” por _(“Yourthoughts”), esta string no nos aparecería inicialmente para traducir.Eso  no  quiere  decir  que  no  hubiéramos  podido  traducirla:  al  tratarse  de  una  traducción  directa,  siempre podríamos escribirla en nuestro script de traducción sin ayuda del Ren'Py SDK. Esta es la última de las tres opciones  que  comentaba  antes:  en  vez  de  editar  los  scripts  originales,  escribimos  en  los  detraducción  las strings que el Ren'Py SDK no ha detectado. Para ello iríamos a la parte del documento donde aparecen las traducciones  directas  (la que  comienza  con  la  función translate Spanish strings:)  y  escribiríamos una  función  de  traducción  con  el  mismo  formato  que  vemos  arriba:  respetando  siempre  la  sangría  de  4 espacios y las comillas, como dicen los dos primeros mandamientos de Ren'Py, en una línea pondríamos el comando oldseguido  de  la  string  a  traducir  (respetando  escrupulosamente  su  escritura,  como  dicen  el cuarto  y  el  quinto  mandamiento  de  Ren'Py),  y  debajo  el  comando newcon  la  traducción.  La  línea  que empieza con # no sería necesaria ya que es meramente informativa.Personalmente,  me  he  acostumbrado  a  revisar  yeditar  primero  los  archivos  originales paraque  el  Ren'Py SDK  haga luego un  trabajo  completo  de  extracción.  Eso  sí,en  ocasiones se  me  pasa  alguna string y  tengo que regenerarvarias veceslos scripts de traducción, lo cual no supone más engorro que el tener que abrir nuevamente el Ren’Py  SDK  y  darle  a  generar  traducciones. Otros,para  tocar  lo  menos  posible  los  scripts originales,prefieren  generar al  principio esos scriptsde  traducción  y  luego  ir modificándolos  a  mano  para incluir todo lo que el Ren'Py SDK se haya dejado sin extraer a la primera. Cuestión de gustos y mecánicas.Tanto si queréis ayudar previamente  al Ren'Py SDK  como si preferís copiar después  a mano las strings que falten en los scripts de traducción, tendréis que revisar los scripts originales y buscar este tipo de comandos:•Character("..."),usado para definir personajes, como hemos visto en el ejemplo•text "...", usado para mostrar texto en una pantalla específica, fuera del diálogo•textbutton "...", usado para textos que realizan una acción al pinchar en ellos•tooltip ‘...’, usado para mostrar un mensaje emergente al pasar el cursor sobre un punto•renpy.input("..."), usado para permitir teclear (nombres de personajes, generalmente)•$ renpy.notify(‘...’, ‘unlock’), usado para mostrar mensajestras completar una acciónAdemás, tenemos las variables de texto. Aquí podemos encontrarnos con varias posibilidades, pero ninguna de ellas seráextraídaautomáticamente por el Ren’Py SDK:•defaultnombre_de_variable= "..."•definenombre_de_variable= "..."•$nombre_de_variable= "..."Así pues, sería cuestión de meter dentro del símbolo _( )todos esos entrecomilladosen los que he puesto puntos  suspensivosy  generar  los  scripts  de  traducción,  o  bien  de  copiarlos  directamente  en  un  script  de traducción (es indiferente en cuál)con el comando oldy debajo el comando newcon su traducción.Tened en  cuenta  que  hay  que  copiar  todo  lo  que  aparezca  entre  comillas,  no  solo  el  texto  a  traducir,  ya  que  en ocasiones  se  añaden  etiquetas  dentro  de  los  símbolos { }para  mostrar  el  texto  en negrita,  cursiva,  con otro tipo o tamaño de letra, y esas etiquetas también forman parte de la string que Ren’Py buscará y reemplazará.
Traducción dejuegosRen’Py: una guía, by moskysDiscord: moskys#0576v1.0 –dic202017Para  acabar  con  este  punto,  una puntualización:  el  símbolo _( )solo  se  usa  para  extraer  las  strings  que haya  dentro  del  paréntesis.  Una  vez  extraídas  a  un  script  de  traducción, podemos  borrarlo  y  la  traducción funcionarábien,  igual  que conel  método  de  escribir  directamente  esas  strings  en  el  script  de  traducción. Por lo tanto, en el caso de juegos que van sacando nuevasversiones, si dentro de los scripts de traducción que podemos reutilizar ya figura esa string traducida, no sería necesario volver a editar los scripts originalespara  extraerla.Y  tampoco  es  una  edición  que  nos  obligue  introducir  ese  script  en el  parche,ya  que  el jugador  no  necesita  tenerla. No  me  avergüenza  reconocer  que  esto  lo  he  aprendido  hace  relativamente poco y que, de haberlo sabido antes, me hubiera ahorrado algunas horas de trabajo innecesario.|Arriba|2.4.-La opción de cambio de idiomaPor último, o quizás en primer lugar antes de empezar a traducir, hay quepensar en cómo vamos a activar la traducción  en  el  juego  una  vez  creada.  ¿Queremos  que  el  juego  se  inicie  siempre  en  español?  ¿Añadimos una  opción  de  cambio  de  idioma  en  el  menú  principal,  o  en  el  de  opciones?  ¿Preferimos  que  el  jugador decida en qué idioma quiere jugar cada vez que arranque el juego? ¿Lo hacemos con una simple pregunta o creamos  una  pantalla  gráfica  con  banderitas  y  demás?  Como  siempre,  depende  de  los  gustos,  el  tiempo disponible y la capacidad de cada traductor, y obviamente también de la configuración del juego original.Lo más sencilloes hacer que el juego se inicie siempre en español. Para ello, abriremos cualquier script del juego  (preferiblemente  el “gui.rpy”porque  es  donde  se  definegran  parte  dela  configuración  del  juego, peroes indiferente,eincluso podemos crear uno nuevo) y escribiremos esta línea de código, sin sangría:define config.language = "Spanish"Si  pongoSpanish  es,  recordemos,porque  es  el nombre  que  le  di  a  mi  idioma  algenerar  los  scripts  de traducción; vosotros usad el término que eligierais.Si no hacemos nada más, el juego se va a iniciar siempre en español y eljugador no tendráninguna opción dentro del juego paracambiar alidiomaoriginal. Inclusodesactivando  esta  línea  de  código  (borrándola  o  escribiendo  un  símbolo  #  delante)  el  juego no volvería  a arrancar en el idioma original, ya que Ren’Py hace que, por defecto, el juego se inicie siempre en el último idioma  en  el  que  se jugó.Habría  que establecer  un nuevo config.languagecon  el  idioma  original (que para Ren’Py siempre se denomina None), o desinstalar el juego, borrar los datos que Ren’Py almacena como copia de seguridad en una carpeta de sistema del ordenador y volver a instalarlo.Lo  recomendable,  en  cualquier  caso, esañadirsiempreuna  opción  de  cambio  de  idioma  dentro  del menú Preferencias.  Suponiendo  que  el  juego  use  la  pantalla  de  preferencias  que  Ren'Py  incorpora  por  defecto, tendríais que ir al script “screens.rpy”, buscar la sección del menú “Preferences” y hacer que quede así:
